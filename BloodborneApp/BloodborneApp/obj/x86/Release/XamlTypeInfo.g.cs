//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace BloodborneApp
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace BloodborneApp.BloodborneApp_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[51];
            _typeNameTable[0] = "BloodborneApp.Amygdala";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "BloodborneApp.BeastClaw";
            _typeNameTable[4] = "BloodborneApp.BladeOfMercy";
            _typeNameTable[5] = "BloodborneApp.BloodStarvedBeast";
            _typeNameTable[6] = "BloodborneApp.Bosses";
            _typeNameTable[7] = "BloodborneApp.BurialBlade";
            _typeNameTable[8] = "BloodborneApp.CainhurstBadge";
            _typeNameTable[9] = "BloodborneApp.CelestialEmissary";
            _typeNameTable[10] = "BloodborneApp.Chikage";
            _typeNameTable[11] = "BloodborneApp.ClericBeast";
            _typeNameTable[12] = "BloodborneApp.CosmicBadge";
            _typeNameTable[13] = "BloodborneApp.CrowBadge";
            _typeNameTable[14] = "BloodborneApp.DarkbeastPaarl";
            _typeNameTable[15] = "BloodborneApp.Ebrietas";
            _typeNameTable[16] = "BloodborneApp.FatherGascoigne";
            _typeNameTable[17] = "BloodborneApp.FiringBadge";
            _typeNameTable[18] = "BloodborneApp.Gehrman";
            _typeNameTable[19] = "BloodborneApp.HunterAxe";
            _typeNameTable[20] = "BloodborneApp.KeyItems";
            _typeNameTable[21] = "BloodborneApp.Kirkhammer";
            _typeNameTable[22] = "BloodborneApp.LogariusWheel";
            _typeNameTable[23] = "BloodborneApp.LudwigsHolyBlade";
            _typeNameTable[24] = "BloodborneApp.MainPage";
            _typeNameTable[25] = "BloodborneApp.MartyrLorgarius";
            _typeNameTable[26] = "BloodborneApp.Menu";
            _typeNameTable[27] = "BloodborneApp.Mergo";
            _typeNameTable[28] = "BloodborneApp.Micolash";
            _typeNameTable[29] = "BloodborneApp.MoonPresence";
            _typeNameTable[30] = "BloodborneApp.OldHunterBadge";
            _typeNameTable[31] = "BloodborneApp.OneReborn";
            _typeNameTable[32] = "BloodborneApp.PowderKHBadge";
            _typeNameTable[33] = "BloodborneApp.RadiantBadge";
            _typeNameTable[34] = "BloodborneApp.Reiterspallach";
            _typeNameTable[35] = "BloodborneApp.RifleSpear";
            _typeNameTable[36] = "BloodborneApp.Rom";
            _typeNameTable[37] = "BloodborneApp.SawBadge";
            _typeNameTable[38] = "BloodborneApp.SawCleaver";
            _typeNameTable[39] = "BloodborneApp.SawSpear";
            _typeNameTable[40] = "BloodborneApp.ShadowOfYharnam";
            _typeNameTable[41] = "BloodborneApp.SparkBadge";
            _typeNameTable[42] = "BloodborneApp.StakeDriver";
            _typeNameTable[43] = "BloodborneApp.SwordHunterBadge";
            _typeNameTable[44] = "BloodborneApp.ThreadedCane";
            _typeNameTable[45] = "BloodborneApp.Tonitrus";
            _typeNameTable[46] = "BloodborneApp.UncannyLost";
            _typeNameTable[47] = "BloodborneApp.VicarAmelia";
            _typeNameTable[48] = "BloodborneApp.Weapons";
            _typeNameTable[49] = "BloodborneApp.WheelBadge";
            _typeNameTable[50] = "BloodborneApp.WitchOfHemwick";

            _typeTable = new global::System.Type[51];
            _typeTable[0] = typeof(global::BloodborneApp.Amygdala);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::BloodborneApp.BeastClaw);
            _typeTable[4] = typeof(global::BloodborneApp.BladeOfMercy);
            _typeTable[5] = typeof(global::BloodborneApp.BloodStarvedBeast);
            _typeTable[6] = typeof(global::BloodborneApp.Bosses);
            _typeTable[7] = typeof(global::BloodborneApp.BurialBlade);
            _typeTable[8] = typeof(global::BloodborneApp.CainhurstBadge);
            _typeTable[9] = typeof(global::BloodborneApp.CelestialEmissary);
            _typeTable[10] = typeof(global::BloodborneApp.Chikage);
            _typeTable[11] = typeof(global::BloodborneApp.ClericBeast);
            _typeTable[12] = typeof(global::BloodborneApp.CosmicBadge);
            _typeTable[13] = typeof(global::BloodborneApp.CrowBadge);
            _typeTable[14] = typeof(global::BloodborneApp.DarkbeastPaarl);
            _typeTable[15] = typeof(global::BloodborneApp.Ebrietas);
            _typeTable[16] = typeof(global::BloodborneApp.FatherGascoigne);
            _typeTable[17] = typeof(global::BloodborneApp.FiringBadge);
            _typeTable[18] = typeof(global::BloodborneApp.Gehrman);
            _typeTable[19] = typeof(global::BloodborneApp.HunterAxe);
            _typeTable[20] = typeof(global::BloodborneApp.KeyItems);
            _typeTable[21] = typeof(global::BloodborneApp.Kirkhammer);
            _typeTable[22] = typeof(global::BloodborneApp.LogariusWheel);
            _typeTable[23] = typeof(global::BloodborneApp.LudwigsHolyBlade);
            _typeTable[24] = typeof(global::BloodborneApp.MainPage);
            _typeTable[25] = typeof(global::BloodborneApp.MartyrLorgarius);
            _typeTable[26] = typeof(global::BloodborneApp.Menu);
            _typeTable[27] = typeof(global::BloodborneApp.Mergo);
            _typeTable[28] = typeof(global::BloodborneApp.Micolash);
            _typeTable[29] = typeof(global::BloodborneApp.MoonPresence);
            _typeTable[30] = typeof(global::BloodborneApp.OldHunterBadge);
            _typeTable[31] = typeof(global::BloodborneApp.OneReborn);
            _typeTable[32] = typeof(global::BloodborneApp.PowderKHBadge);
            _typeTable[33] = typeof(global::BloodborneApp.RadiantBadge);
            _typeTable[34] = typeof(global::BloodborneApp.Reiterspallach);
            _typeTable[35] = typeof(global::BloodborneApp.RifleSpear);
            _typeTable[36] = typeof(global::BloodborneApp.Rom);
            _typeTable[37] = typeof(global::BloodborneApp.SawBadge);
            _typeTable[38] = typeof(global::BloodborneApp.SawCleaver);
            _typeTable[39] = typeof(global::BloodborneApp.SawSpear);
            _typeTable[40] = typeof(global::BloodborneApp.ShadowOfYharnam);
            _typeTable[41] = typeof(global::BloodborneApp.SparkBadge);
            _typeTable[42] = typeof(global::BloodborneApp.StakeDriver);
            _typeTable[43] = typeof(global::BloodborneApp.SwordHunterBadge);
            _typeTable[44] = typeof(global::BloodborneApp.ThreadedCane);
            _typeTable[45] = typeof(global::BloodborneApp.Tonitrus);
            _typeTable[46] = typeof(global::BloodborneApp.UncannyLost);
            _typeTable[47] = typeof(global::BloodborneApp.VicarAmelia);
            _typeTable[48] = typeof(global::BloodborneApp.Weapons);
            _typeTable[49] = typeof(global::BloodborneApp.WheelBadge);
            _typeTable[50] = typeof(global::BloodborneApp.WitchOfHemwick);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_Amygdala() { return new global::BloodborneApp.Amygdala(); }
        private object Activate_3_BeastClaw() { return new global::BloodborneApp.BeastClaw(); }
        private object Activate_4_BladeOfMercy() { return new global::BloodborneApp.BladeOfMercy(); }
        private object Activate_5_BloodStarvedBeast() { return new global::BloodborneApp.BloodStarvedBeast(); }
        private object Activate_6_Bosses() { return new global::BloodborneApp.Bosses(); }
        private object Activate_7_BurialBlade() { return new global::BloodborneApp.BurialBlade(); }
        private object Activate_8_CainhurstBadge() { return new global::BloodborneApp.CainhurstBadge(); }
        private object Activate_9_CelestialEmissary() { return new global::BloodborneApp.CelestialEmissary(); }
        private object Activate_10_Chikage() { return new global::BloodborneApp.Chikage(); }
        private object Activate_11_ClericBeast() { return new global::BloodborneApp.ClericBeast(); }
        private object Activate_12_CosmicBadge() { return new global::BloodborneApp.CosmicBadge(); }
        private object Activate_13_CrowBadge() { return new global::BloodborneApp.CrowBadge(); }
        private object Activate_14_DarkbeastPaarl() { return new global::BloodborneApp.DarkbeastPaarl(); }
        private object Activate_15_Ebrietas() { return new global::BloodborneApp.Ebrietas(); }
        private object Activate_16_FatherGascoigne() { return new global::BloodborneApp.FatherGascoigne(); }
        private object Activate_17_FiringBadge() { return new global::BloodborneApp.FiringBadge(); }
        private object Activate_18_Gehrman() { return new global::BloodborneApp.Gehrman(); }
        private object Activate_19_HunterAxe() { return new global::BloodborneApp.HunterAxe(); }
        private object Activate_20_KeyItems() { return new global::BloodborneApp.KeyItems(); }
        private object Activate_21_Kirkhammer() { return new global::BloodborneApp.Kirkhammer(); }
        private object Activate_22_LogariusWheel() { return new global::BloodborneApp.LogariusWheel(); }
        private object Activate_23_LudwigsHolyBlade() { return new global::BloodborneApp.LudwigsHolyBlade(); }
        private object Activate_24_MainPage() { return new global::BloodborneApp.MainPage(); }
        private object Activate_25_MartyrLorgarius() { return new global::BloodborneApp.MartyrLorgarius(); }
        private object Activate_26_Menu() { return new global::BloodborneApp.Menu(); }
        private object Activate_27_Mergo() { return new global::BloodborneApp.Mergo(); }
        private object Activate_28_Micolash() { return new global::BloodborneApp.Micolash(); }
        private object Activate_29_MoonPresence() { return new global::BloodborneApp.MoonPresence(); }
        private object Activate_30_OldHunterBadge() { return new global::BloodborneApp.OldHunterBadge(); }
        private object Activate_31_OneReborn() { return new global::BloodborneApp.OneReborn(); }
        private object Activate_32_PowderKHBadge() { return new global::BloodborneApp.PowderKHBadge(); }
        private object Activate_33_RadiantBadge() { return new global::BloodborneApp.RadiantBadge(); }
        private object Activate_34_Reiterspallach() { return new global::BloodborneApp.Reiterspallach(); }
        private object Activate_35_RifleSpear() { return new global::BloodborneApp.RifleSpear(); }
        private object Activate_36_Rom() { return new global::BloodborneApp.Rom(); }
        private object Activate_37_SawBadge() { return new global::BloodborneApp.SawBadge(); }
        private object Activate_38_SawCleaver() { return new global::BloodborneApp.SawCleaver(); }
        private object Activate_39_SawSpear() { return new global::BloodborneApp.SawSpear(); }
        private object Activate_40_ShadowOfYharnam() { return new global::BloodborneApp.ShadowOfYharnam(); }
        private object Activate_41_SparkBadge() { return new global::BloodborneApp.SparkBadge(); }
        private object Activate_42_StakeDriver() { return new global::BloodborneApp.StakeDriver(); }
        private object Activate_43_SwordHunterBadge() { return new global::BloodborneApp.SwordHunterBadge(); }
        private object Activate_44_ThreadedCane() { return new global::BloodborneApp.ThreadedCane(); }
        private object Activate_45_Tonitrus() { return new global::BloodborneApp.Tonitrus(); }
        private object Activate_46_UncannyLost() { return new global::BloodborneApp.UncannyLost(); }
        private object Activate_47_VicarAmelia() { return new global::BloodborneApp.VicarAmelia(); }
        private object Activate_48_Weapons() { return new global::BloodborneApp.Weapons(); }
        private object Activate_49_WheelBadge() { return new global::BloodborneApp.WheelBadge(); }
        private object Activate_50_WitchOfHemwick() { return new global::BloodborneApp.WitchOfHemwick(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  BloodborneApp.Amygdala
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_Amygdala;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  BloodborneApp.BeastClaw
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_3_BeastClaw;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  BloodborneApp.BladeOfMercy
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_4_BladeOfMercy;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  BloodborneApp.BloodStarvedBeast
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_5_BloodStarvedBeast;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  BloodborneApp.Bosses
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_6_Bosses;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  BloodborneApp.BurialBlade
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_7_BurialBlade;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  BloodborneApp.CainhurstBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_8_CainhurstBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  BloodborneApp.CelestialEmissary
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_9_CelestialEmissary;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  BloodborneApp.Chikage
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_10_Chikage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  BloodborneApp.ClericBeast
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_11_ClericBeast;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  BloodborneApp.CosmicBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_CosmicBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  BloodborneApp.CrowBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_CrowBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  BloodborneApp.DarkbeastPaarl
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_14_DarkbeastPaarl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  BloodborneApp.Ebrietas
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_15_Ebrietas;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  BloodborneApp.FatherGascoigne
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_FatherGascoigne;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  BloodborneApp.FiringBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_17_FiringBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  BloodborneApp.Gehrman
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_18_Gehrman;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  BloodborneApp.HunterAxe
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_19_HunterAxe;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  BloodborneApp.KeyItems
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_KeyItems;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  BloodborneApp.Kirkhammer
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_Kirkhammer;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  BloodborneApp.LogariusWheel
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_22_LogariusWheel;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  BloodborneApp.LudwigsHolyBlade
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_LudwigsHolyBlade;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  BloodborneApp.MainPage
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  BloodborneApp.MartyrLorgarius
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_25_MartyrLorgarius;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  BloodborneApp.Menu
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_Menu;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  BloodborneApp.Mergo
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_Mergo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  BloodborneApp.Micolash
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_Micolash;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  BloodborneApp.MoonPresence
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_MoonPresence;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  BloodborneApp.OldHunterBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_OldHunterBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  BloodborneApp.OneReborn
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_OneReborn;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  BloodborneApp.PowderKHBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_PowderKHBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  BloodborneApp.RadiantBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_RadiantBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  BloodborneApp.Reiterspallach
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_Reiterspallach;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  BloodborneApp.RifleSpear
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_RifleSpear;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  BloodborneApp.Rom
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_Rom;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  BloodborneApp.SawBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_SawBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  BloodborneApp.SawCleaver
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_SawCleaver;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  BloodborneApp.SawSpear
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_SawSpear;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  BloodborneApp.ShadowOfYharnam
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_40_ShadowOfYharnam;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  BloodborneApp.SparkBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_41_SparkBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  BloodborneApp.StakeDriver
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_StakeDriver;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  BloodborneApp.SwordHunterBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_SwordHunterBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  BloodborneApp.ThreadedCane
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_ThreadedCane;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  BloodborneApp.Tonitrus
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_45_Tonitrus;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  BloodborneApp.UncannyLost
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_UncannyLost;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  BloodborneApp.VicarAmelia
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_47_VicarAmelia;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  BloodborneApp.Weapons
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_48_Weapons;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  BloodborneApp.WheelBadge
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_49_WheelBadge;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  BloodborneApp.WitchOfHemwick
                userType = new global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_WitchOfHemwick;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }



        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlMember xamlMember = null;
            // No Local Properties
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlSystemBaseType
    {
        global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::BloodborneApp.BloodborneApp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

